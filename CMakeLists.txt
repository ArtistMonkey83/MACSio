PROJECT(MACSIO)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(MACSIO_MAJOR_VERSION 1)
SET(MACSIO_MINOR_VERSION 0)
SET(MACSIO_PATCH_VERSION 0)
SET(MACSIO_VERSION
    "${MACSIO_MAJOR_VERSION}.${MACSIO_MINOR_VERSION}.${MACSIO_PATCH_VERSION}")

LIST(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

## JSON-CWX
FIND_PACKAGE(JSON-CWX REQUIRED)
INCLUDE_DIRECTORIES(${JSON-CWX_INCLUDE_DIRS})
LIST(APPEND MIO_EXTERNAL_LIBS ${JSON-CWX_LIBRARIES})

## MPI
OPTION(ENABLE_MPI "Enable MPI" ON)
IF(ENABLE_MPI)
    INCLUDE(SetupMPI)
    SET(HAVE_MPI TRUE)
    INCLUDE_DIRECTORIES(${MPI_C_INCLUDE_PATH})
    LIST(APPEND MIO_EXTERNAL_LIBS ${MPI_C_LIBRARIES})
ENDIF(ENABLE_MPI)

## SILO
OPTION(ENABLE_SILO "Enable SILO Layer" ON)
IF(ENABLE_SILO)
    FIND_PACKAGE(SILO REQUIRED)
    INCLUDE_DIRECTORIES(${SILO_INCLUDE_DIRS})
    LIST(APPEND MIO_EXTERNAL_LIBS ${SILO_LIBRARIES})
ENDIF(ENABLE_SILO)

## TYPHONIO
OPTION(ENABLE_TYPHONIO "Enable TYPHONIO Layer" ON)
IF(ENABLE_TYPHONIO)
    FIND_PACKAGE(TYPHONIO REQUIRED)
    INCLUDE_DIRECTORIES(${TYPHONIO_INCLUDE_DIRS})
    LIST(APPEND MIO_EXTERNAL_LIBS ${TYPHONIO_LIBRARIES})
ENDIF(ENABLE_TYPHONIO)

## Installing things the linux way
INCLUDE(GNUInstallDirs)

# Subdirectories

ADD_SUBDIRECTORY(plugins)
INCLUDE_DIRECTORIES(plugins)

ADD_SUBDIRECTORY(macsio)

OPTION(BUILD_DOCS "Build MACSio Doxygen documentation?" OFF)
IF(BUILD_DOCS)
    ADD_SUBDIRECTORY(doc)
ENDIF(BUILD_DOCS)
